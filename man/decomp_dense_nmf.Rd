% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decomp_dense_nmf.R
\name{decomp_dense_nmf}
\alias{decomp_dense_nmf}
\title{Decomposition Approach : Dense matrix NMF}
\usage{
decomp_dense_nmf(
  sce,
  n_components,
  assay = "logcounts",
  method = "Lsnmf",
  initialization = "nndsvd",
  ignore_warnings = FALSE,
  result_name = "dense-nmf",
  envname = "r-decomp",
  return_model = FALSE,
  seed = 42,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{sce}{<SingleCellExperiment object> SCE object}

\item{n_components}{<integer> number of Non Negative Factors desired.}

\item{assay}{<character> default 'logcounts'; name of the assay to be used
during the downstream analysis.}

\item{method}{<character> default 'Lsnmf'; Type of algorithm used to perform
NMF. It can be one ofâ€¦
*Lsnmf* : Alternating Non Negative Least Squares Matrix Factorization Using
Projected Gradient (bound constrained optimization) method for each
sub-problem (LSNMF) (Lin2007). (From nimfa)
*bayesian* : Bayesian Decomposition (BD) - Bayesian Non Negative Matrix
Factorization Gibbs sampler (bayesian) (Schmidt2009). (From nimfa)
*separable*: Separable Nonnegative Matrix Factorization (SepNMF)
(Damle2014), (Benson2014), (Kumar2013), (Gillis2014), (Tepper2015),
(Kapralov2016). (From nimfa)
*default*: Standard NMF with Euclidean /
Kullback-Leibler update equations and Frobenius /
divergence / connectivity cost functions (Lee2001), (Brunet2004).
(from nimfa)}

\item{initialization}{<character> default nndsvd; Type of initialization used
for performing NMF. Can be one of:
*nndsvd* : Non Negative Double Singular Value Decomposition
(NNDSVD) (Boutsidis2007) (from nimfa).
*randomc* Random C (Albright2006) is an inexpensive initialization
method for NMF. (From nimfa).
*randomv* Random V (Albright2006) is an inexpensive initialization
method for NMF. (From nimfa).
*random* Random is the simplest MF initialization method. (From nimfa)}

\item{ignore_warnings}{<bool> default FALSE; Whether to avoid warnings.
note: using verbose = FALSE and ignore warnings = TRUE may result in
the suppression of warnings due to suppressing most of the messages from
the function.}

\item{result_name}{<character> default 'dense-nmf';
Name of used to store the result in the SingleCellExperiment object.}

\item{envname}{<character> default 'r-decomp';
Specify the name of the python virtual
environment to be used. If it does not exists it will create one and use it.}

\item{return_model}{<bool> default FALSE; Whether to return also
the model and not only
the SingleCellExperiment object.}

\item{seed}{<integer> default 42; to set the seed for reproducibility.}

\item{verbose}{<bool> default FALSE; Whether to be prompted with message
for each step of the analysis.}

\item{...}{<extra arguments for the specific implementation of nmf used>}
}
\value{
either a SingleCellExperiment object with both H and W
representations or the SingleCellExperiment object and the model
used to perform NMF.
}
\description{
This function performs NMF with a dense
coercion of the input matrix. One can choose between different NMF
implementations and initialization. The results are directly stored in
the input SingleCellExperiment (SCE) object.
}
\examples{
library('packageX')
data(sce)
decomp_dense_nmf(sce, n_components = 3)
decomp_dense_nmf(sce, n_components = 3, method = 'bayesian')
decomp_dense_nmf(sce, n_components = 3, method = 'separable')
decomp_dense_nmf(sce, n_components = 3, method = 'default')
}
