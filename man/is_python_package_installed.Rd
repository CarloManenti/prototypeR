% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_python_package_installed.R
\name{is_python_package_installed}
\alias{is_python_package_installed}
\title{Checks if a Python Package is Available in a given Virtual Environment}
\usage{
is_python_package_installed(
  packages.vec,
  envname = "r-reticulate",
  forced = TRUE
)
}
\arguments{
\item{packages.vec}{<vector of characters> Vector of the needed python
packages.}

\item{envname}{<character> default 'r-reticulate'; name of the virtual
enviroment to be used. If the virtual environment already exists, it will
use it to check if the packages are available. Otherwise it will create
a new one with the specified name. The new environment can be removed with
*reticulate::virtualenv_remove(envname = 'my-env')* and the list of all
available packages can be seen using *reticulate::virtualenv_list()*.}

\item{forced}{<bool> default TRUE; Whether to force the use of the specified
virtual environment or not. Generally you want to specify the use of the
virtual environment if you want to use right away the packages.}
}
\value{
nothing, it is a simple side-effect function. It will break the
function if the package is not available. But it will fail gracefully.
}
\description{
Handy function to check if a Python package is available in a specified
virtual environment or not. If the virtual environment does not exists, it
will create one with the same name. If the python package is not to be found,
it will install it. It is based on reticulate!
}
\examples{
#is_python_package_installed(packages.vec = 'numpy', envname = 'r-decomp')
}
