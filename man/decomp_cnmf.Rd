% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decomp_cnmf.R
\name{decomp_cnmf}
\alias{decomp_cnmf}
\title{Decomposition Approach : Consensus Non-Negative Matrix Factorization}
\usage{
decomp_cnmf(
  sce,
  n_components,
  levels,
  assay = "counts",
  num_iterations = 100,
  num_workers = 4,
  num_hvgenes = 5000,
  return_TPM = FALSE,
  density_threshold = 0.01,
  run_name = "Intermediate_results",
  output_dir = "~/cnmf",
  result_name = "cnmf",
  envname = "r-decomp",
  return_model = FALSE,
  seed = 42,
  verbose = FALSE,
  ignore_warnings = TRUE,
  file_name = "Intermediate_anndata.h5ad"
)
}
\arguments{
\item{sce}{<SingleCellExperiment object> SCE object}

\item{n_components}{<integer> number of Non-Negative Factors (NNF) desired.}

\item{levels}{<vector of integers> sequence of number of components to
investigate. It will run cNMF for each of these levels. The n_components
must fall inside this interval.}

\item{assay}{<character> default counts;
specifying the assay to use, preferred raw counts!}

\item{num_iterations}{<integer> default 100;
number of iterations used to build
the consensus matrices}

\item{num_workers}{<integer> default 0;
number of parallel processes; if 0 it will detect the number of cores
available in the machine and will set it to the max_number of cores - 2.
Generally, it is best to set it yourself given the dimension of the data set.}

\item{num_hvgenes}{<integer> default 5000;
number of Highly Variable Genes to be selected
prior to performing cNMF.}

\item{return_TPM}{<bool> default FALSE;
Whether to return the Transcript Per Million or
the actual gene weights. Generally gene weights highlights better difference
in the data.}

\item{density_threshold}{<double> default 0.01;
distance threshold (euclidean distance) of
a NNF to its K Nearest Neighbors to be consider for building the
consensus matrices.}

\item{run_name}{<character> default Intermediate_results;
name of the specific run of cNMF, it will be also
the name of the dedicated folder with the intermediate results.}

\item{output_dir}{<character> default ./cnmf;
directory used to store intermediate results.}

\item{result_name}{<character> default cnmf;
name of used to store the result in the
SingleCellExperiment object.}

\item{envname}{<character> default r-decomp;
specify the name of the python virtual
environment to be used. If it does not exists it will create one and use it.}

\item{return_model}{<bool> default FALSE;
Whether to return also the model and not only
the SingleCellExperiment object.}

\item{seed}{<integer> default 42; to set the seed for reproducibility.}

\item{verbose}{<bool> default FALSE;
Whether to be prompted with message for each step of the analysis.}

\item{ignore_warnings}{<bool> default TRUE; Whether to ignore warnings}

\item{file_name}{<character> default 'Intermediate_anndata.h5ad';
Name of the file in which is stored the AnnData object processed by cNMF.
To pass the data to the cNMF core function, one must save the AnnData
object in a .h5ad file. file_name is the name of the .h5ad file.}
}
\value{
either a SingleCellExperiment object with cNMF representation for
both genes and cells, or the SingleCellExperiment object and the model
used to perform cNMF.
}
\description{
This function performs Consensus Non-Negative Matrix Factorization (cNMF)
on an assay of a SingleCellExperiment and stores the results directly in
the object.
}
\examples{
library('packageX')
data(sce)
decomp_cnmf(sce = sce, n_components = 3, levels = 3 , num_iterations = 50, density_threshold = 1)
}
