% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cell_capture.R
\name{cell_capture}
\alias{cell_capture}
\title{Computes Cell Capture Score for a given annotation vector}
\usage{
cell_capture(
  sce,
  annotations,
  decomp,
  alternative = "greater",
  adj_pvalue_method = "BH",
  adj_pvalue = TRUE,
  min_log_10 = TRUE,
  cap_multiplier = 2,
  remove_infs = FALSE
)
}
\arguments{
\item{sce}{<SingleCellExperiment object> SCE object with at least one
reducedDim representation saved.}

\item{annotations}{description <vector> Vector stating the annotation for
each cell.}

\item{decomp}{<character> specifying the reducedDim representation to use}

\item{alternative}{<character> specifying the alternative hypothesis,
must be one of "two.sided" (default), "greater" or "less".
You can specify just the initial letter.}

\item{adj_pvalue_method}{<character> correction method, a character string.
Can be abbreviated. The adjustment methods include the Bonferroni correction
("bonferroni") in which the p-values are multiplied by the number of
comparisons. Less conservative corrections are also included by Holm
(1979) ("holm"), Hochberg (1988) ("hochberg"), Hommel (1988) ("hommel"),
Benjamini & Hochberg (1995) ("BH" or its alias "fdr"), and Benjamini &
Yekutieli (2001) ("BY"), respectively. A pass-through option ("none")
is also included. The set of methods are contained in the p.adjust.methods
vector for the benefit of methods that need to have the method as an option
and pass it on to p.adjust. (from the p.adjusted function)}

\item{adj_pvalue}{<bool> either TRUE or FALSE, to specify whether to
correct the pvalue for multiple testing or not, respectively.}

\item{min_log_10}{<bool> whether to compute the -log10(p.value).}

\item{cap_multiplier}{<double or integer> number which multiplies the maximum
non infinite pvalue to impute infinite values.}

\item{remove_infs}{<bool> whether to impute Infinite values by the
max(pvalue) * cap_value + 10}
}
\value{
matrix metadata x prototypes with cell capture scores
}
\description{
This function computes a cell capture score for a given annotation by
testing with a Welch's t-test the difference between the values of
a pattern associated to a given annotation against all the others.
Hence, it gives an idea of how much of the annotations information
is present in that given pattern, compared to all the others.
}
\examples{
#cell_capture(sce, sce$cluster, 'pca')
}
